import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:receipt_management/expense/bloc/bloc.dart';
import 'package:receipt_management/expense/models/receipts_summary_model.dart';
import 'package:receipt_management/widgets/app_bar.dart';

class ReceiptsSummaryScreen extends StatefulWidget {
  const ReceiptsSummaryScreen({Key? key}) : super(key: key);

  @override
  State<ReceiptsSummaryScreen> createState() => _ReceiptsSummaryScreenState();
}

class _ReceiptsSummaryScreenState extends State<ReceiptsSummaryScreen> {
  late final ReceiptsSummaryListBloc _summaryListBloc;

  @override
  void dispose() {
    super.dispose();
    _summaryListBloc.add(ReceiptSummaryUnload());
  }

  @override
  void initState() {
    super.initState();
    _summaryListBloc = BlocProvider.of<ReceiptsSummaryListBloc>(context);
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: appBar(context, title: "Receipts Summary"),
        body: SingleChildScrollView(
          child: _pageLayout(),
        ),
        floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
        floatingActionButton: _createNewSummaryButton(context),
      ),
    );
  }

  Widget _pageLayout() {
    final _height = MediaQuery.of(context).size.height;
    return Column(
      children: [
        Padding(
          padding: const EdgeInsets.fromLTRB(20, 30, 20, 20),
          child: _pageTitle(),
        ),
        Container(
          padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
          height: _height * 0.62,
          child: _summaryListBuilder(),
        ),
      ],
    );
  }

  Widget _pageTitle() {
    return const Center(
      child: Text(
        "List of summaries generated by selecting some groups of receipts ",
        textAlign: TextAlign.center,
      ),
    );
  }

  Widget _summaryListBuilder() {
    return BlocBuilder<ReceiptsSummaryListBloc, ReceiptsSummaryListState>(
      builder: (context, state) {
        if (state is ReceiptsSummaryListLoaded) {
          if (state.summaries.isEmpty) {
            return const Padding(
              padding: EdgeInsets.all(10.0),
              child: Center(
                child: Text('No Summary!'),
              ),
            );
          }
          return ListView.builder(
            shrinkWrap: true,
            itemCount: state.summaries.length,
            itemBuilder: (BuildContext context, int index) {
              return Padding(
                padding: const EdgeInsets.all(10.0),
                child: _summaryTile(state.summaries[index]),
              );
            },
          );
        }
        if (state is ReceiptsSummaryListFailed) {
          return Padding(
            padding: const EdgeInsets.all(10.0),
            child: Center(
              child: Text(state.errorMsg),
            ),
          );
        }
        if (state is ReceiptsSummaryListInitial) {
          _summaryListBloc.add(ReceiptSummaryLoad());
        }

        return const Padding(
          padding: EdgeInsets.all(10.0),
          child: Center(
            child: Text('No Data!'),
          ),
        );
      },
    );
  }

  Widget _summaryTile(ReceiptExpenseSummary summary) {
    return Container(
      padding: const EdgeInsets.fromLTRB(10, 0, 0, 0),
      decoration: BoxDecoration(
          shape: BoxShape.rectangle,
          color: Colors.white,
          borderRadius: BorderRadius.circular(10),
          boxShadow: const [
            BoxShadow(
              color: Colors.grey,
              blurRadius: 5.0,
            ),
          ]),
      child: ListTile(
        contentPadding: const EdgeInsets.fromLTRB(5, 5, 5, 5),
        onTap: () {
          _summaryListBloc.add(ReceiptSummaryUnload());
          Navigator.of(context)
              .pushNamed('/receiptSummaryDetails', arguments: summary.id);
        },
        title: Text(summary.title),
        subtitle: Text(
          summary.totalPrice.toString(),
        ),
      ),
    );
  }

  Widget _createNewSummaryButton(BuildContext context) {
    return Container(
      padding: const EdgeInsets.fromLTRB(0, 0, 0, 15),
      width: 200,
      child: FloatingActionButton(
        heroTag: 'create_summary',
        backgroundColor: const Color.fromRGBO(139, 208, 161, 1),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
        onPressed: () {
          _summaryListBloc.add(ReceiptSummaryUnload());
          Navigator.of(context).pushNamed('/summaryOfReceipts');
        },
        child: const Text(
          'New Summary',
          style: TextStyle(
            color: Colors.black,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }
}
